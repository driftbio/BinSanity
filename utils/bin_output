#! /usr/bin/env python
# -*- coding: utf-8 -*-
from Bio import SeqIO
import glob
import argparse
import time
import os


def bin_output(b, o):
    contig_names_bin = []
    file_names = []
    for filename in os.listdir(b):
        for record in SeqIO.parse(os.path.join(b, filename), "fasta"):
            contig_names_bin.append(record.id)
            file2 = filename.rsplit('.', 1)[0]
            file_names.append(str(file2))
    new_ = list(zip(contig_names_bin, file_names))
    with open(str(o), 'w') as file:
        file.writelines('\t'.join(i) + '\n' for i in new_)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        prog='bin_output.py', usage='%(prog)s -b Putative Genomes > output')
    parser.add_argument("-b", dest="inputPutative",
                        help="Specify directory with bins to be profiled")
    parser.add_argument("-o", dest="inputOUTPUT",
                        help="Specify the output file")

    args = parser.parse_args()

    if args.inputPutative is None:
        parser.print_help()

    else:
        print()
        bin_output(args.inputPutative, args.inputOUTPUT)
